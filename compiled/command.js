(function(){function warn(line){process.stderr.write(line+"\n")}function parseOptions(){var options,arg,ki$1,kobj$1,index,inputs,ki$2,kobj$2;for(options={},kobj$1=process.argv,ki$1=0;kobj$1.length>ki$1;ki$1++)arg=kobj$1[ki$1],"-"===arg[0]&&"-"!==arg[1]?(k$indexof.call(arg,"h")>=0&&(options.help=!0),k$indexof.call(arg,"t")>=0&&(options.tokens=!0),k$indexof.call(arg,"j")>=0&&(options.javascript=!0),k$indexof.call(arg,"b")>=0&&(options.bare=!0),k$indexof.call(arg,"v")>=0&&(options.version=!0),k$indexof.call(arg,"m")>=0&&(options.minify=!0)):"-"===arg[0]&&"-"===arg[1]&&("--help"===arg&&(options.help=!0),"--tokens"===arg&&(options.tokens=!0),"--javascript"===arg&&(options.javascript=!0),"--bare"===arg&&(options.bare=!0),"--version"===arg&&(options.version=!0),"--minify"===arg&&(options.minify=!0));for(k$indexof.call(process.argv,"-o")>=0?index=process.argv.indexOf("-o"):k$indexof.call(process.argv,"--output")>=0&&(index=process.argv.indexOf("--output")),-1!==index&&(options.output=process.argv[index+1]),inputs=[],kobj$2=process.argv.slice(2),ki$2=0;kobj$2.length>ki$2;ki$2++)arg=kobj$2[ki$2],"-"===arg[0]||arg===options.output?(0!==inputs.length&&(options.help=!0),inputs=[]):inputs.push(arg);return options._=inputs,options}function run(){var options,compile_options,files,file,filename,ki$3,kobj$3;if(options=parseOptions(),options.version)return version();if(options.help)return usage();if(null!=options.output&&!existsSync(options.output))return warn("output path does not exist!"),usage();if(0===options._.length)return require("./interactive");if(process.argv[0]="kal",process.execPath=require.main.filename,compile_options={show_tokens:options.tokens,bare:options.bare,show_js:options.javascript},null!=options.output){try{options.minify?require("uglify-js"):void 0}catch(k$e){warn("error: uglify-js must be installed to use the --minify option"),process.exit(3)}1===options._.length&&fs.statSync(options._[0]).isDirectory()?(files=k$comprl(fs.readdirSync(options._[0]),function(k$i){return file=k$i,path.join(options._[0],file)}),compile_files(files,options.output,compile_options,options.minify)):compile_files(options._,options.output,compile_options,options.minify)}else for(kobj$3=options._,ki$3=0;kobj$3.length>ki$3;ki$3++)filename=kobj$3[ki$3],compile_options.literate=k$indexof.call([".litkal",".md"],path.extname(filename))>=0,Kal.eval(fs.readFileSync(filename),compile_options)}function compile_files(filenames,output_dir,options,minify){var filename,stat,new_outdir,subfiles,child,extension,js_output,js_filename,ki$4,kobj$4;for(kobj$4=filenames,ki$4=0;kobj$4.length>ki$4;ki$4++)filename=kobj$4[ki$4],stat=fs.statSync(filename),stat.isDirectory()?(new_outdir=path.join(output_dir,path.basename(filename)),fs.mkdirSync(new_outdir,stat.mode),subfiles=k$comprl(fs.readdirSync(filename),function(k$i){return child=k$i,path.join(filename,child)}),compile_files(subfiles,new_outdir,options,minify)):k$indexof.call([".kal",".litkal",".md"],path.extname(filename))>=0&&(extension=path.extname(filename),options.literate=k$indexof.call([".litkal",".md"],extension)>=0,js_output=Kal.compile(fs.readFileSync(filename),options),minify&&(js_output=require("uglify-js").minify(js_output,{fromString:!0,mangle:!1}).code),options.show_js?console.log(js_output):void 0,js_filename=path.join(output_dir,path.basename(filename,extension))+".js",fs.writeFileSync(js_filename,js_output))}function version(){console.log("Kal version "+Kal.VERSION),process.exit(0)}function usage(){console.log("Usage: kal [options] SOURCE [-o OUTPUT_DIR]"),console.log(""),console.log("If called without the -o option, `kal` will run SOURCE."),console.log("If called without any options, `kal` will start an interactive session."),console.log(""),console.log(""),console.log("Options:"),console.log("  --help, -h        show the command line usage options                  [boolean]"),console.log("  --tokens, -t      print out the tokens that the lexer/sugarer produce  [boolean]"),console.log("  --javascript, -j  print out the compiled javascript                    [boolean]"),console.log("  --bare, -b        don't wrap the output in a function                  [boolean]"),console.log("  --version, -v     display the version number                           [boolean]"),console.log("  --output, -o      the output directory for the compiled source"),console.log("  --minify          minify the output (requires uglify-js)               [boolean]"),process.exit(2)}var fs,path,Kal,existsSync,k$indexof=[].indexOf||function(item){for(var i=0,l=this.length;l>i;i++)if(i in this&&this[i]===item)return i;return-1},k$comprl=function(iterable,func,cond){var o=[];if(cond=cond||function(){return!0},iterable instanceof Array||"number"==typeof iterable.length)for(var i=0;iterable.length>i;i++)cond(iterable[i])&&o.push(func(iterable[i]));else{if("function"!=typeof iterable.next)throw"Object is not iterable";for(var i;null!=(i=iterable.next());)cond(i)&&o.push(func(i))}return o};fs=require("fs"),path=require("path"),Kal=require("./kal"),existsSync=fs.existsSync||path.existsSync,exports.run=run})();